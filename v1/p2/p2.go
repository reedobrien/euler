//Each new term in the Fibonacci sequence is generated by adding the previous
//two terms. By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not
// exceed four million, find the sum of the even-valued terms.
package main

import (
	"fmt"
	"strconv"

	"github.com/reedobrien/euler/v0/utils"
)

var (
	max    int64 = 4000 * 1000 // 4,000,000
	sum, i int64
	s      string
	err    error
)

func main() {
	fib := utils.Fibgen()
	for i <= max {
		s = <-fib
		i, err = strconv.ParseInt(s, 10, 64)
		if err != nil {
			panic("Invalid num returned from fingen")
		}
		if i%2 == 0 {
			sum += i
		}

	}
	fmt.Printf("The sum of even primes which does not exceed 4,000,000 is: %d\n", sum)
}
